# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  issues: write
  checks: write
  pull-requests: write
  actions: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - uses: actions/checkout@v3
    - name: make application.yml
      run: |
        # create application.yml
        cd ./src/main/resources
        
        # application.yml 파일 생성
        touch ./application.yml
      
        # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
        echo "${{ secrets.WAS1_APPLICATION }}" >> ./application.yml

      shell: bash

    - name: Build with Gradle
      run: |
        ./gradlew build

#     - name: Save test result
#       uses: EnricoMi/publish-unit-test-result-action@v1
#       if: always()
#       with:
#         files: '**/build/test-results/test/TEST-*.xml'
#          token: ${{ secrets.TOKEN_GITHUB }}

#     - name: Saves check comment when test fails
#       uses: mikepenz/action-junit-report@v3
#       if: always()
#       with:
#         report_paths: '**/build/test-results/test/TEST-*.xml'
#          token: ${{ github.token }}

    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.WAS1_DOCKER_USERNAME }} -p ${{ secrets.WAS1_DOCKER_PASSWORD }}
        docker build -t ${{ secrets.WAS1_DOCKER_REPO }}/COKIRI .
        docker push ${{ secrets.WAS1_DOCKER_REPO }}/COKIRI 


    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.WAS1_HOST }}
        username: ubuntu
        key: ${{ secrets.WAS1_PEM_KEY }}
        port: 22
        script: |
          sudo docker pull ${{ secrets.WAS1_DOCKER_REPO }}/COKIRI 
          sudo docker run ${{ secrets.WAS1_DOCKER_REPO }}/COKIRI 
